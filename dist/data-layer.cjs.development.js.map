{"version":3,"file":"data-layer.cjs.development.js","sources":["../src/services/fetch/fetch.ts","../src/services/converter/converter.ts","../src/api/yahoo/const/commodities.ts","../src/api/yahoo/const/cryptocurrencies.ts","../src/api/yahoo/const/indices.ts","../src/api/yahoo/const/currencies.ts","../src/api/yahoo/yahoo.ts","../src/api/forexclub/forexclub.constansts.ts","../src/api/forexclub/forexclub.ts"],"sourcesContent":["import axios, { AxiosPromise } from 'axios';\nimport { RequestConfig } from './fetch.interface';\n\nconst yahoo = axios.create({\n  baseURL: 'https://query1.finance.yahoo.com/v7/finance/download/',\n});\n\nconst apiMapper = {\n  yahoo,\n};\n\nexport const fetch = <T>({\n  api = 'yahoo',\n  url = '/',\n  method = 'GET',\n  headers = {},\n  params = {},\n  data = {},\n  ...config\n}: RequestConfig): AxiosPromise<T> => {\n  return apiMapper[api]({\n    url,\n    method,\n    headers,\n    params,\n    data,\n    ...config,\n  });\n};\n","import { ConverterInterface } from './converter.interface';\n\nexport class Converter<T extends string> implements ConverterInterface<T> {\n  constructor(private data: string | string[]) {}\n\n  toCSV() {\n    if (typeof this.data === 'string') {\n      this.data = this.data.split('\\n');\n    }\n    return this;\n  }\n\n  toJSON() {\n    if (Array.isArray(this.data)) {\n      const header = this.data[0].split(',');\n      const data = this.data.slice(1);\n      // @ts-ignore\n      this.data = data.reduce((acc, item) => {\n        const obj = {};\n\n        if (item.includes('null')) {\n          return acc;\n        }\n\n        item.split(',').forEach((val, i) => {\n          // @ts-ignore\n          obj[header[i].replace(' ', '')] = val;\n        });\n\n        return [...acc, obj];\n      }, <object[]>[]);\n\n      return this;\n    }\n    return this;\n  }\n\n  save() {\n    return this.data;\n  }\n}\n","\nexport const commodities = {\n  \"energy\": {\n    \"Crude Oil\": \"CL=F\",\n    \"Brent Crude Oil\": \"BZ=F\",\n    \"Natural Gas\": \"NG=F\",\n    \"Heating Oil\": \"HO=F\",\n  },\n  metals: {\n    \"Gold\": \"GC=F\",\n    \"Silver\": \"SI=F\",\n    \"Copper\": \"HG=F\",\n    \"Platinum\": \"PA=F\",\n  },\n  agriculture: {\n    \"Coffee\": \"KC=F\",\n    \"Corn\": \"ZC=F\",\n    \"Wheat\": \"KE=F\",\n    \"Sugar\": \"SB=F\",\n    \"Cotton\": \"CT=F\",\n    \"Cocoa\": \"CC=F\",\n  },\n}; \n","export const cryptocurrencies = {\n  Bitcoin: 'BTC-USD',\n  Ethereum: 'ETH-USD',\n  'Binance Coin': 'BNB-USD',\n  XRP: 'XRP-USD',\n  Cardano: 'ADA-USD',\n  Solana: 'SOL-USD',\n  Dogecoin: 'DOGE-USD',\n  Polkadot: 'DOT-USD',\n  HEX: 'HEX-USD',\n  TRON: 'TRX-USD',\n  'SHIBA INU': 'SHIB-USD',\n  'UNUS SED LEO': 'LEO-USD',\n  Avalanche: 'AVAX-USD',\n  Polygon: 'MATIC-USD',\n  yOUcash: 'YOUC-USD',\n  Uniswap: 'UNI1-USD',\n  Litecoin: 'LTC-USD',\n  'Lido stETH': 'STETH-USD',\n  'FTX Token': 'FTT-USD',\n  Chainlink: 'LINK-USD',\n  Stellar: 'XLM-USD',\n  'Crypto.com Coin': 'CRO-USD',\n  'NEAR Protocol\t': 'NEAR-USD',\n  Algorand: 'ALGO-USD',\n  Cosmos: 'ATOM-USD',\n  Monero: 'XMR-USD',\n  'Bitcoin Cash': 'BCH-USD',\n  'Ethereum Classic': 'ETC-USD',\n  Chain: 'XCN1-USD',\n  VeChain: 'VET-USD',\n  Flow: 'FLOW-USD',\n  Decentraland: 'MANA-USD',\n  Hedera: 'HBAR-USD',\n  'Internet Computer': 'ICP-USD',\n  THETA: 'THETA-USD',\n  Elrond: 'EGLD-USD',\n  Frax: 'FRAX-USD',\n  'Axie Infinity': 'AXS-USD',\n  Toncoin: 'TONCOIN-USD',\n  'The Sandbox': 'SAND-USD',\n  ApeCoin: 'APE3-USD',\n  Tezos: 'XTZ-USD',\n  'Filecoin\t': 'FIL-USD',\n  'Helium\t': 'HNT-USD',\n  'Bitcoin SV': 'BSV-USD',\n  'KuCoin Token': 'KCS-USD',\n  'EOS-USD': 'EOS',\n  Zcash: 'ZEC-USD',\n  Maker: 'MKR-USD',\n  Aave: 'AAVE-USD',\n  IOTA: 'MIOTA-USD',\n  'Huobi Token': 'HT-USD',\n  eCash: 'XEC-USD',\n  Neutrino: 'USDN-USD',\n  'The Graph': 'GRT1-USD',\n  OKB: 'OKB-USD',\n  Liquity: 'LUSD-USD',\n  THORChain: 'RUNE-USD',\n  Klaytn: 'KLAY-USD',\n  Fantom: 'FTM-USD',\n  Waves: 'WAVES-USD',\n  Neo: 'NEO-USD',\n  Quant: 'QNT-USD',\n  'Basic Attention Token': 'BAT-USD',\n  'PAX Gold': 'PAXG-USD',\n  Chiliz: 'CHZ-USD',\n  Zilliqa: 'ZIL-USD',\n  BitTorrent: 'BTT-USD',\n  Loopring: 'LRC-USD',\n  Dash: 'DASH-USD',\n  Stacks: 'STX-USD',\n  DeFiChain: 'DFI-USD',\n  PancakeSwap: 'CAKE-USD',\n  'Green Metaverse Token': 'GMT3-USD',\n  'Enjin Coin': 'ENJ-USD',\n  Kusama: 'KSM-USD',\n  'Tether Gold': 'XAUT-USD',\n  Fruits: 'FRTS-USD',\n  'Curve DAO Token': 'CRV-USD',\n  Gala: 'GALA-USD',\n  Celo: 'CELO-USD',\n  Amp: 'AMP-USD',\n  Holo: 'HOT1-USD',\n  Kava: 'KAVA-USD',\n  '1inch Network': '1INCH-USD',\n  Nexo: 'NEXO-USD',\n  NEM: 'XEM-USD',\n  Storj: 'STORJ-USD',\n  'XDC Network': 'XDC-USD',\n  Safe: 'SAFE1-USD',\n  Mina: 'MINA-USD',\n  WEMIX: 'WEMIX-USD',\n  Synthetix: 'SNX-USD',\n  Decred: 'DCR-USD',\n  'Counos X': 'CCXX-USD',\n  Arweave: 'AR-USD',\n  GateToken: 'GT-USD',\n  Kadena: 'KDA-USD',\n  Qtum: 'QTUM-USD',\n  Symbol: 'XYM-USD',\n  Gnosis: 'GNO-USD',\n  Compound: 'COMP1-USD',\n  Threshold: 'T-USD',\n  'Bitcoin Gold': 'BTG-USD',\n  Harmony: 'ONE1-USD',\n  'Convex Finance': 'CVX-USD',\n  BORA: 'BORA-USD',\n  'Theta Fuel': 'TFUEL-USD',\n  IOST: 'IOST-USD',\n  'OMG Network': 'OMG-USD',\n  IoTeX: 'IOTX-USD',\n  Audius: 'AUDIO-USD',\n  'Oasis Network': 'ROSE-USD',\n  ICON: 'ICX-USD',\n  BinaryX: 'BNX-USD',\n  'The Transfer Token': 'TTT1-USD',\n  BitDAO: 'BIT1-USD',\n  'Kyber Network Crystal v2': 'KNC-USD',\n  TitanSwap: 'TITAN-USD',\n  Ravencoin: 'RVN-USD',\n  Ankr: 'ANKR-USD',\n  Celsius: 'CEL-USD',\n  '0x': 'ZRX-USD',\n  'Trust Wallet Token': 'TWT-USD',\n  NXM: 'NXM-USD',\n  Osmosis: 'OSMO-USD',\n  Serum: 'SRM-USD',\n  Golem: 'GLM-USD',\n  Terra: 'LUNA2-USD',\n  'WOO Network': 'WOO-USD',\n  MXC: 'MXC-USD',\n  LINK: 'LN-USD',\n  Balancer: 'BAL-USD',\n  JUST: 'JST-USD',\n  Livepeer: 'LPT-USD',\n  Ontology: 'ONT-USD',\n  Swipe: 'SXP-USD',\n  'Siacoin\t': 'SC-USD',\n  'SKALE Network': 'SKL-USD',\n  WAX: 'WAXP-USD',\n  'yearn.finance': 'YFI-USD',\n  Moonbeam: 'GLMR-USD',\n  'Immutable X': 'IMX1-USD',\n  SwissBorg: 'CHSB-USD',\n  Horizen: 'ZEN-USD',\n  'Ethereum Name Service': 'ENS-USD',\n  Astar: 'ASTR-USD',\n  LooksRare: 'LOOKS-USD',\n  Hive: 'HIVE-USD',\n  Polymath: 'POLY-USD',\n};\n","export const indices = [\n  {\n    name: 'Dow Jones',\n    symbol: '^DJI',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'NASDAQ 100',\n    symbol: '^NDX',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'NASDAQ Composite',\n    symbol: '^IXIC',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'S&P 500',\n    symbol: '^GSPC',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'CBOE Volatility',\n    symbol: '^VIX',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'US Dollar',\n    symbol: 'DX-Y.NYB',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'AEX',\n    symbol: '^AEX',\n    country: 'NL',\n    region: 'Europe',\n  },\n  {\n    name: 'CAC 40',\n    symbol: '^FCH',\n    country: 'FR',\n    region: 'Europe',\n  },\n  {\n    name: 'DAX',\n    symbol: '^GDAXI',\n    country: 'DE',\n    region: 'Europe',\n  },\n  {\n    name: 'Euro Stoxx 50',\n    symbol: '^STOXX50E',\n    country: 'DE',\n    region: 'Europe',\n  },\n  {\n    name: 'FTSE 100',\n    symbol: '^FTSE',\n    country: 'GB',\n    region: 'Europe',\n  },\n  {\n    name: 'FTSE MIB INDEX',\n    symbol: 'FTSEMIB.MI',\n    country: 'IT',\n    region: 'Europe',\n  },\n  {\n    name: 'IBEX 35',\n    symbol: '^IBEX',\n    country: 'ES',\n    region: 'Europe',\n  },\n  {\n    name: 'MOEX Russia',\n    symbol: 'IMOEX.ME',\n    country: 'RU',\n    region: 'Europe',\n  },\n  {\n    name: 'RTSI',\n    symbol: 'RTSI.ME',\n    country: 'RU',\n    region: 'Europe',\n  },\n  {\n    name: 'FTSE China A50',\n    symbol: 'XIN9.FGI',\n    country: 'CN',\n    region: 'Asia',\n  },\n  {\n    name: 'Hang Seng',\n    symbol: '^HSI',\n    country: 'CN',\n    region: 'Asia',\n  },\n  {\n    name: 'Nikkei 225',\n    symbol: '^N225',\n    country: 'JP',\n    region: 'Asia',\n  },\n];\n","\nexport const currencies = {\n  \"EUR/USD\": \"EURUSD=X\",\n  \"USD/JPY\": \"JPY=X\",\n  \"GBP/USD\": \"GBPUSD=X\",\n  \"AUD/USD\": \"AUDUSD=X\",\n  \"NZD/USD\": \"NZDUSD=X\",\n  \"EUR/JPY\": \"EURJPY=X\",\n  \"GBP/JPY\": \"GBPJPY=X\",\n  \"EUR/GBP\": \"EURGBP=X\",\n  \"EUR/CAD\": \"EURCAD=X\",\n  \"EUR/SEK\": \"EURSEK=X\",\n  \"EUR/CHF\": \"EURCHF=X\",\n  \"EUR/HUF\": \"EURHUF=X\",\n  \"USD/CNY\": \"CNY=X\",\n  \"USD/HKD\": \"HKD=X\",\n  \"USD/SGD\": \"SGD=X\",\n  \"USD/INR\": \"INR=X\",\n  \"USD/MXN\": \"MXN=X\",\n  \"USD/PHP\": \"PHP=X\",\n  \"USD/IDR\": \"IDR=X\",\n  \"USD/THB\": \"THB=X\",\n  \"USD/MYR\": \"IDR=X\",\n  \"USD/ZAR\": \"ZAR=X\",\n  \"USD/RUB\": \"RUB=X\",\n}","import { TickerOptions, YahooInterface, TickerGroups } from './yahoo.interface';\nimport { FetchInterface } from '../../services/fetch/fetch.interface';\nimport { commodities } from './const/commodities';\nimport { cryptocurrencies } from './const/cryptocurrencies';\nimport { indices } from './const/indices';\nimport { currencies } from './const/currencies';\n\nexport class Yahoo implements YahooInterface {\n  constructor(private readonly fetcher: FetchInterface) {}\n\n  getTickerList(type?: TickerGroups) {\n    const mappedType = {\n      commodities,\n      cryptocurrencies,\n      indices,\n      currencies,\n    };\n    return type ? mappedType[type] : mappedType;\n  }\n\n  async getTicker(ticker: string, options: TickerOptions) {\n    const url = new URL(\n      `https://query1.finance.yahoo.com/v7/finance/download/${ticker}`\n    );\n    Object.entries(options).forEach(([key, value]) =>\n      url.searchParams.set(key, String(value))\n    );\n\n    const { data } = await this.fetcher<string>({\n      url: url.toString(),\n      method: 'GET',\n    });\n\n    return data;\n  }\n}\n","\nexport const regions = [\n  'HK',\n  'HU',\n  'MX',\n  'SG',\n  'JP',\n  'BR',\n  'IT',\n  'KR',\n  'TR',\n  'RO',\n  'CN',\n  'PL',\n  'PT',\n  'ID',\n  'SE',\n  'LU',\n  'FI',\n  'DE',\n  'AU',\n  'RU',\n  'IE',\n  'ZA',\n  'GB',\n  'IN',\n  'NL',\n  'CH',\n  'ES',\n  'CZ',\n  'FR',\n  'EA',\n  'NO',\n  'AT',\n  'CY',\n  'GR',\n  'DK',\n  'CA',\n  'US',\n  'NZ',\n  'BE'\n]","import { FetchInterface } from '../../services/fetch/fetch.interface';\nimport {\n  CalendarOptions,\n  CalendarResponse,\n  ForexClubInterface,\n} from './forexclub.interface';\nimport { regions } from './forexclub.constansts';\n\nexport class ForexClub implements ForexClubInterface {\n  constructor(private readonly fetcher: FetchInterface) {}\n\n  getRegions(): string[] {\n    return regions;\n  }\n\n  async getCalendar(options: CalendarOptions): Promise<CalendarResponse> {\n    const url = new URL('https://economcalendar.fxclub.org/api/events/');\n    Object.entries(options).forEach(([key, value]) =>\n      url.searchParams.set(key, value)\n    );\n\n    const { data } = await this.fetcher<CalendarResponse>({\n      url: url.toString(),\n      method: 'GET',\n    });\n\n    return data;\n  }\n}\n"],"names":["yahoo","axios","create","baseURL","apiMapper","fetch","api","url","method","headers","params","data","config","Converter","toCSV","split","toJSON","Array","isArray","header","slice","reduce","acc","item","obj","includes","forEach","val","i","replace","save","commodities","metals","agriculture","cryptocurrencies","Bitcoin","Ethereum","XRP","Cardano","Solana","Dogecoin","Polkadot","HEX","TRON","Avalanche","Polygon","yOUcash","Uniswap","Litecoin","Chainlink","Stellar","Algorand","Cosmos","Monero","Chain","VeChain","Flow","Decentraland","Hedera","THETA","Elrond","Frax","Toncoin","ApeCoin","Tezos","Zcash","Maker","Aave","IOTA","eCash","Neutrino","OKB","Liquity","THORChain","Klaytn","Fantom","Waves","Neo","Quant","Chiliz","Zilliqa","BitTorrent","Loopring","Dash","Stacks","DeFiChain","PancakeSwap","Kusama","Fruits","Gala","Celo","Amp","Holo","Kava","Nexo","NEM","Storj","Safe","Mina","WEMIX","Synthetix","Decred","Arweave","GateToken","Kadena","Qtum","Symbol","Gnosis","Compound","Threshold","Harmony","BORA","IOST","IoTeX","Audius","ICON","BinaryX","BitDAO","TitanSwap","Ravencoin","Ankr","Celsius","NXM","Osmosis","Serum","Golem","Terra","MXC","LINK","Balancer","JUST","Livepeer","Ontology","Swipe","WAX","Moonbeam","SwissBorg","Horizen","Astar","LooksRare","Hive","Polymath","indices","name","symbol","country","region","currencies","Yahoo","fetcher","getTickerList","type","mappedType","getTicker","ticker","options","URL","Object","entries","key","value","searchParams","set","String","toString","regions","ForexClub","getRegions","getCalendar"],"mappings":"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"}