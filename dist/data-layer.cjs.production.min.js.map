{"version":3,"file":"data-layer.cjs.production.min.js","sources":["../src/services/fetch/fetch.ts","../src/services/converter/converter.ts","../src/api/yahoo/yahoo.ts","../src/api/forexclub/forexclub.constansts.ts","../src/api/forexclub/forexclub.ts","../src/const/index.ts","../src/const/indices.ts","../src/const/commodities.ts","../src/const/cryptocurrencies.ts","../src/const/currencies.ts"],"sourcesContent":["import axios, { AxiosPromise } from 'axios';\nimport { RequestConfig } from './fetch.interface';\n\nconst yahoo = axios.create({\n  baseURL: 'https://query1.finance.yahoo.com/v7/finance/download/',\n});\n\nconst apiMapper = {\n  yahoo,\n};\n\nexport const fetch = <T>({\n  api = 'yahoo',\n  url = '/',\n  method = 'GET',\n  headers = {},\n  params = {},\n  data = {},\n  ...config\n}: RequestConfig): AxiosPromise<T> => {\n  return apiMapper[api]({\n    url,\n    method,\n    headers,\n    params,\n    data,\n    ...config,\n  });\n};\n","import { ConverterInterface } from './converter.interface';\n\nexport class Converter<T extends string> implements ConverterInterface<T> {\n  constructor(private data: string | string[]) {}\n\n  toCSV() {\n    if (typeof this.data === 'string') {\n      this.data = this.data.split('\\n');\n    }\n    return this;\n  }\n\n  toJSON() {\n    if (Array.isArray(this.data)) {\n      const header = this.data[0].split(',');\n      const data = this.data.slice(1);\n      // @ts-ignore\n      this.data = data.reduce((acc, item) => {\n        const obj = {};\n\n        if (item.includes('null')) {\n          return acc;\n        }\n\n        item.split(',').forEach((val, i) => {\n          // @ts-ignore\n          obj[header[i].replace(' ', '')] = val;\n        });\n\n        return [...acc, obj];\n      }, <object[]>[]);\n\n      return this;\n    }\n    return this;\n  }\n\n  save() {\n    return this.data;\n  }\n}\n","import { TickerOptions, YahooInterface } from './yahoo.interface';\nimport { FetchInterface } from '../../services/fetch/fetch.interface';\n\nexport class Yahoo implements YahooInterface {\n  constructor(private readonly fetcher: FetchInterface) {}\n\n  async getTicker(ticker: string, options: TickerOptions) {\n    const url = new URL(\n      `https://query1.finance.yahoo.com/v7/finance/download/${ticker}`\n    );\n    Object.entries(options).forEach(([key, value]) =>\n      url.searchParams.set(key, String(value))\n    );\n\n    const { data } = await this.fetcher<string>({\n      url: url.toString(),\n      method: 'GET',\n    });\n\n    return data;\n  }\n}\n","\nexport const regions = [\n  'HK',\n  'HU',\n  'MX',\n  'SG',\n  'JP',\n  'BR',\n  'IT',\n  'KR',\n  'TR',\n  'RO',\n  'CN',\n  'PL',\n  'PT',\n  'ID',\n  'SE',\n  'LU',\n  'FI',\n  'DE',\n  'AU',\n  'RU',\n  'IE',\n  'ZA',\n  'GB',\n  'IN',\n  'NL',\n  'CH',\n  'ES',\n  'CZ',\n  'FR',\n  'EA',\n  'NO',\n  'AT',\n  'CY',\n  'GR',\n  'DK',\n  'CA',\n  'US',\n  'NZ',\n  'BE'\n]","import { FetchInterface } from '../../services/fetch/fetch.interface';\nimport {\n  CalendarOptions,\n  CalendarResponse,\n  ForexClubInterface,\n} from './forexclub.interface';\nimport { regions } from './forexclub.constansts';\n\nexport class ForexClub implements ForexClubInterface {\n  constructor(private readonly fetcher: FetchInterface) {}\n\n  getRegions(): string[] {\n    return regions;\n  }\n\n  async getCalendar(options: CalendarOptions): Promise<CalendarResponse> {\n    const url = new URL('https://economcalendar.fxclub.org/api/events/');\n    Object.entries(options).forEach(([key, value]) =>\n      url.searchParams.set(key, value)\n    );\n\n    const { data } = await this.fetcher<CalendarResponse>({\n      url: url.toString(),\n      method: 'GET',\n    });\n\n    return data;\n  }\n}\n","import { indices } from './indices';\nimport { commodities } from './commodities';\nimport { cryptocurrencies } from './cryptocurrencies';\nimport { currencies } from './currencies';\n\nexport const constants = {\n  indices,\n  commodities,\n  cryptocurrencies,\n  currencies,\n};\n","\nexport const indices = [\n  {\n    name: 'Dow Jones',\n    key: \"^DJI\",\n    country: \"US\",\n    region: \"North America\"\n  },\n  {\n    name: 'NASDAQ 100',\n    key: \"^NDX\",\n    country: \"US\",\n    region: \"North America\"\n  },\n  {\n    name: 'NASDAQ Composite',\n    key: \"^IXIC\",\n    country: \"US\",\n    region: \"North America\"\n  },\n  {\n    name: 'S&P 500',\n    key: \"^GSPC\",\n    country: \"US\",\n    region: \"North America\"\n  },\n  {\n    name: 'CBOE Volatility',\n    key: \"^VIX\",\n    country: \"US\",\n    region: \"North America\"\n  },\n  {\n    name: 'US Dollar',\n    key: \"DX-Y.NYB\",\n    country: \"US\",\n    region: \"North America\"\n  },\n  {\n    name: 'AEX',\n    key: \"^AEX\",\n    country: \"NL\",\n    region: \"Europe\"\n  },\n  {\n    name: 'CAC 40',\n    key: \"^FCH\",\n    country: \"FR\",\n    region: \"Europe\"\n  },\n  {\n    name: 'DAX',\n    key: \"^GDAXI\",\n    country: \"DE\",\n    region: \"Europe\"\n  },\n  {\n    name: 'Euro Stoxx 50',\n    key: \"^STOXX50E\",\n    country: \"DE\",\n    region: \"Europe\"\n  },\n  {\n    name: 'FTSE 100',\n    key: \"^FTSE\",\n    country: \"GB\",\n    region: \"Europe\"\n  },\n  {\n    name: 'FTSE MIB INDEX',\n    key: \"FTSEMIB.MI\",\n    country: \"IT\",\n    region: \"Europe\"\n  },\n  {\n    name: 'IBEX 35',\n    key: \"^IBEX\",\n    country: \"ES\",\n    region: \"Europe\"\n  },\n  {\n    name: 'MOEX Russia',\n    key: \"IMOEX.ME\",\n    country: \"RU\",\n    region: \"Europe\"\n  },\n  {\n    name: 'RTSI',\n    key: \"RTSI.ME\",\n    country: \"RU\",\n    region: \"Europe\"\n  },\n  {\n    name: 'FTSE China A50',\n    key: \"XIN9.FGI\",\n    country: \"CN\",\n    region: \"Asia\"\n  },\n  {\n    name: 'Hang Seng',\n    key: \"^HSI\",\n    country: \"CN\",\n    region: \"Asia\"\n  },\n  {\n    name: 'Nikkei 225',\n    key: \"^N225\",\n    country: \"JP\",\n    region: \"Asia\"\n  },\n]","\nexport const commodities = {\n  \"energy\": {\n    \"Crude Oil\": \"CL=F\",\n    \"Brent Crude Oil\": \"BZ=F\",\n    \"Natural Gas\": \"NG=F\",\n    \"Heating Oil\": \"HO=F\",\n  },\n  metals: {\n    \"Gold\": \"GC=F\",\n    \"Silver\": \"SI=F\",\n    \"Copper\": \"HG=F\",\n    \"Platinum\": \"PA=F\",\n  },\n  agriculture: {\n    \"Coffee\": \"KC=F\",\n    \"Corn\": \"ZC=F\",\n    \"Wheat\": \"KE=F\",\n    \"Sugar\": \"SB=F\",\n    \"Cotton\": \"CT=F\",\n    \"Cocoa\": \"CC=F\",\n  },\n}; ","export const cryptocurrencies = {\n  \"Bitcoin USD\": \"BTC-USD\",\n  \"Ethereum USD\": \"ETH-USD\",\n  \"Binance Coin USD\": \"BNB-USD\",\n  \"XRP USD\": \"XRP-USD\",\n  \"Cardano USD\": \"ADA-USD\",\n  \"Solana USD\": \"SOL-USD\",\n  \"Dogecoin USD\": \"DOGE-USD\",\n  \"Polkadot USD\": \"DOT-USD\",\n  \"HEX USD\": \"HEX-USD\",\n  \"TRON USD\": \"TRX-USD\",\n  \"SHIBA INU USD\": \"SHIB-USD\",\n  \"UNUS SED LEO USD\": \"LEO-USD\",\n  \"Avalanche USD\": \"AVAX-USD\",\n  \"Polygon USD\": \"MATIC-USD\",\n  \"yOUcash USD\":\"YOUC-USD\",\n  \"Uniswap USD\": \"UNI1-USD\",\n  \"Litecoin USD\": \"LTC-USD\",\n  \"Lido stETH USD\": \"STETH-USD\",\n  \"FTX Token USD\": \"FTT-USD\",\n  \"Chainlink USD\": \"LINK-USD\",\n  \"Stellar USD\": \"XLM-USD\",\n  \"Crypto.com Coin USD\": \"CRO-USD\",\n  \"NEAR Protocol USD\t\": \"NEAR-USD\",\n  \"Algorand USD\": \"ALGO-USD\",\n  \"Cosmos USD\": \"ATOM-USD\",\n  \"Monero USD\": \"XMR-USD\",\n  \"Bitcoin Cash USD\": \"BCH-USD\",\n  \"Ethereum Classic USD\": \"ETC-USD\",\n  \"Chain USD\": \"XCN1-USD\",\n  \"VeChain USD\": \"VET-USD\",\n  \"Flow USD\": \"FLOW-USD\",\n  \"Decentraland USD\": \"MANA-USD\",\n  \"Hedera USD\": \"HBAR-USD\",\n  \"Internet Computer USD\": \"ICP-USD\",\n  \"THETA USD\": \"THETA-USD\",\n  \"Elrond USD\": \"EGLD-USD\",\n  \"Frax USD\": \"FRAX-USD\",\n  \"Axie Infinity USD\": \"AXS-USD\",\n  \"Toncoin USD\": \"TONCOIN-USD\",\n  \"The Sandbox USD\": \"SAND-USD\",\n  \"ApeCoin USD\": \"APE3-USD\",\n  \"Tezos USD\": \"XTZ-USD\",\n  \"Filecoin USD\t\": \"FIL-USD\",\n  \"Helium USD\t\": \"HNT-USD\",\n  \"Bitcoin SV USD\": \"BSV-USD\",\n  \"KuCoin Token USD\": \"KCS-USD\",\n  \"EOS-USD\": \"EOS USD\",\n  \"Zcash USD\": \"ZEC-USD\",\n  \"Maker USD\": \"MKR-USD\",\n  \"Aave USD\": \"AAVE-USD\",\n  \"IOTA USD\": \"MIOTA-USD\",\n  \"Huobi Token USD\": \"HT-USD\",\n  \"eCash USD\": \"XEC-USD\",\n  \"Neutrino USD USD\": \"USDN-USD\",\n  \"The Graph USD\": \"GRT1-USD\",\n  \"OKB USD\": \"OKB-USD\",\n  \"Liquity USD USD\": \"LUSD-USD\",\n  \"THORChain USD\": \"RUNE-USD\",\n  \"Klaytn USD\": \"KLAY-USD\",\n  \"Fantom USD\": \"FTM-USD\",\n  \"Waves USD\": \"WAVES-USD\",\n  \"Neo USD\": \"NEO-USD\",\n  \"Quant USD\": \"QNT-USD\",\n  \"Basic Attention Token USD\": \"BAT-USD\",\n  \"PAX Gold USD\": \"PAXG-USD\",\n  \"Chiliz USD\": \"CHZ-USD\",\n  \"Zilliqa USD\": \"ZIL-USD\",\n  \"BitTorrent USD\": \"BTT-USD\",\n  \"Loopring USD\": \"LRC-USD\",\n  \"Dash USD\": \"DASH-USD\",\n  \"Stacks USD\": \"STX-USD\",\n  \"DeFiChain USD\": \"DFI-USD\",\n  \"PancakeSwap USD\": \"CAKE-USD\",\n  \"Green Metaverse Token USD\": \"GMT3-USD\",\n  \"Enjin Coin USD\": \"ENJ-USD\",\n  \"Kusama USD\": \"KSM-USD\",\n  \"Tether Gold USD\": \"XAUT-USD\",\n  \"Fruits USD\": \"FRTS-USD\",\n  \"Curve DAO Token USD\": \"CRV-USD\",\n  \"Gala USD\": \"GALA-USD\",\n  \"Celo USD\": \"CELO-USD\",\n  \"Amp USD\": \"AMP-USD\",\n  \"Holo USD\": \"HOT1-USD\",\n  \"Kava USD\": \"KAVA-USD\",\n  \"1inch Network USD\": \"1INCH-USD\",\n  \"Nexo USD\": \"NEXO-USD\",\n  \"NEM USD\": \"XEM-USD\",\n  \"Storj USD\": \"STORJ-USD\",\n  \"XDC Network USD\": \"XDC-USD\",\n  \"Safe USD\": \"SAFE1-USD\",\n  \"Mina USD\": \"MINA-USD\",\n  \"WEMIX USD\": \"WEMIX-USD\",\n  \"Synthetix USD\": \"SNX-USD\",\n  \"Decred USD\": \"DCR-USD\",\n  \"Counos X USD\": \"CCXX-USD\",\n  \"Arweave USD\": \"AR-USD\",\n  \"GateToken USD\": \"GT-USD\",\n  \"Kadena USD\": \"KDA-USD\",\n  \"Qtum USD\": \"QTUM-USD\",\n  \"Symbol USD\": \"XYM-USD\",\n  \"Gnosis USD\": \"GNO-USD\",\n  \"Compound USD\": \"COMP1-USD\",\n  \"Threshold USD\": \"T-USD\",\n  \"Bitcoin Gold USD\": \"BTG-USD\",\n  \"Harmony USD\": \"ONE1-USD\",\n  \"Convex Finance USD\": \"CVX-USD\",\n  \"BORA USD\": \"BORA-USD\",\n  \"Theta Fuel USD\": \"TFUEL-USD\",\n  \"IOST USD\": \"IOST-USD\",\n  \"OMG Network USD\": \"OMG-USD\",\n  \"IoTeX USD\": \"IOTX-USD\",\n  \"Audius USD\": \"AUDIO-USD\",\n  \"Oasis Network USD\": \"ROSE-USD\",\n  \"ICON USD\": \"ICX-USD\",\n  \"BinaryX USD\": \"BNX-USD\",\n  \"The Transfer Token USD\": \"TTT1-USD\",\n  \"BitDAO USD\": \"BIT1-USD\",\n  \"Kyber Network Crystal v2 USD\": \"KNC-USD\",\n  \"TitanSwap USD\": \"TITAN-USD\",\n  \"Ravencoin USD\": \"RVN-USD\",\n  \"Ankr USD\": \"ANKR-USD\",\n  \"Celsius USD\": \"CEL-USD\",\n  \"0x USD\": \"ZRX-USD\",\n  \"Trust Wallet Token USD\": \"TWT-USD\",\n  \"NXM USD\": \"NXM-USD\",\n  \"Osmosis USD\": \"OSMO-USD\",\n  \"Serum USD\": \"SRM-USD\",\n  \"Golem USD\": \"GLM-USD\",\n  \"Terra USD\": \"LUNA2-USD\",\n  \"WOO Network USD\": \"WOO-USD\",\n  \"MXC USD\": \"MXC-USD\",\n  \"LINK USD\": \"LN-USD\",\n  \"Balancer USD\": \"BAL-USD\",\n  \"JUST USD\": \"JST-USD\",\n  \"Livepeer USD\": \"LPT-USD\",\n  \"Ontology USD\": \"ONT-USD\",\n  \"Swipe USD\": \"SXP-USD\",\n  \"Siacoin USD\t\": \"SC-USD\",\n  \"SKALE Network USD\": \"SKL-USD\",\n  \"WAX USD\": \"WAXP-USD\",\n  \"yearn.finance USD\": \"YFI-USD\",\n  \"Moonbeam USD\": \"GLMR-USD\",\n  \"Immutable X USD\": \"IMX1-USD\",\n  \"SwissBorg USD\": \"CHSB-USD\",\n  \"Horizen USD\": \"ZEN-USD\",\n  \"Ethereum Name Service USD\": \"ENS-USD\",\n  \"Astar USD\": \"ASTR-USD\",\n  \"LooksRare USD\": \"LOOKS-USD\",\n  \"Hive USD\": \"HIVE-USD\",\n  \"Polymath USD\": \"POLY-USD\"\n}","\nexport const currencies = {\n  \"EUR/USD\": \"EURUSD=X\",\n  \"USD/JPY\": \"JPY=X\",\n  \"GBP/USD\": \"GBPUSD=X\",\n  \"AUD/USD\": \"AUDUSD=X\",\n  \"NZD/USD\": \"NZDUSD=X\",\n  \"EUR/JPY\": \"EURJPY=X\",\n  \"GBP/JPY\": \"GBPJPY=X\",\n  \"EUR/GBP\": \"EURGBP=X\",\n  \"EUR/CAD\": \"EURCAD=X\",\n  \"EUR/SEK\": \"EURSEK=X\",\n  \"EUR/CHF\": \"EURCHF=X\",\n  \"EUR/HUF\": \"EURHUF=X\",\n  \"USD/CNY\": \"CNY=X\",\n  \"USD/HKD\": \"HKD=X\",\n  \"USD/SGD\": \"SGD=X\",\n  \"USD/INR\": \"INR=X\",\n  \"USD/MXN\": \"MXN=X\",\n  \"USD/PHP\": \"PHP=X\",\n  \"USD/IDR\": \"IDR=X\",\n  \"USD/THB\": \"THB=X\",\n  \"USD/MYR\": \"IDR=X\",\n  \"USD/ZAR\": \"ZAR=X\",\n  \"USD/RUB\": \"RUB=X\",\n}"],"names":["apiMapper","yahoo","axios","create","baseURL","Converter","data","this","_proto","toCSV","split","toJSON","Array","isArray","header","slice","reduce","acc","item","obj","includes","forEach","val","i","replace","save","Yahoo","fetcher","getTicker","ticker","options","url","URL","Object","entries","searchParams","set","String","_context","toString","method","regions","ForexClub","getRegions","getCalendar","indices","name","key","country","region","commodities","energy","Crude Oil","Brent Crude Oil","Natural Gas","Heating Oil","metals","Gold","Silver","Copper","Platinum","agriculture","Coffee","Corn","Wheat","Sugar","Cotton","Cocoa","cryptocurrencies","Bitcoin USD","Ethereum USD","Binance Coin USD","XRP USD","Cardano USD","Solana USD","Dogecoin USD","Polkadot USD","HEX USD","TRON USD","SHIBA INU USD","UNUS SED LEO USD","Avalanche USD","Polygon USD","yOUcash USD","Uniswap USD","Litecoin USD","Lido stETH USD","FTX Token USD","Chainlink USD","Stellar USD","Crypto.com Coin USD","NEAR Protocol USD\t","Algorand USD","Cosmos USD","Monero USD","Bitcoin Cash USD","Ethereum Classic USD","Chain USD","VeChain USD","Flow USD","Decentraland USD","Hedera USD","Internet Computer USD","THETA USD","Elrond USD","Frax USD","Axie Infinity USD","Toncoin USD","The Sandbox USD","ApeCoin USD","Tezos USD","Filecoin USD\t","Helium USD\t","Bitcoin SV USD","KuCoin Token USD","EOS-USD","Zcash USD","Maker USD","Aave USD","IOTA USD","Huobi Token USD","eCash USD","Neutrino USD USD","The Graph USD","OKB USD","Liquity USD USD","THORChain USD","Klaytn USD","Fantom USD","Waves USD","Neo USD","Quant USD","Basic Attention Token USD","PAX Gold USD","Chiliz USD","Zilliqa USD","BitTorrent USD","Loopring USD","Dash USD","Stacks USD","DeFiChain USD","PancakeSwap USD","Green Metaverse Token USD","Enjin Coin USD","Kusama USD","Tether Gold USD","Fruits USD","Curve DAO Token USD","Gala USD","Celo USD","Amp USD","Holo USD","Kava USD","1inch Network USD","Nexo USD","NEM USD","Storj USD","XDC Network USD","Safe USD","Mina USD","WEMIX USD","Synthetix USD","Decred USD","Counos X USD","Arweave USD","GateToken USD","Kadena USD","Qtum USD","Symbol USD","Gnosis USD","Compound USD","Threshold USD","Bitcoin Gold USD","Harmony USD","Convex Finance USD","BORA USD","Theta Fuel USD","IOST USD","OMG Network USD","IoTeX USD","Audius USD","Oasis Network USD","ICON USD","BinaryX USD","The Transfer Token USD","BitDAO USD","Kyber Network Crystal v2 USD","TitanSwap USD","Ravencoin USD","Ankr USD","Celsius USD","0x USD","Trust Wallet Token USD","NXM USD","Osmosis USD","Serum USD","Golem USD","Terra USD","WOO Network USD","MXC USD","LINK USD","Balancer USD","JUST USD","Livepeer USD","Ontology USD","Swipe USD","Siacoin USD\t","SKALE Network USD","WAX USD","yearn.finance USD","Moonbeam USD","Immutable X USD","SwissBorg USD","Horizen USD","Ethereum Name Service USD","Astar USD","LooksRare USD","Hive USD","Polymath USD","currencies","EUR/USD","USD/JPY","GBP/USD","AUD/USD","NZD/USD","EUR/JPY","GBP/JPY","EUR/GBP","EUR/CAD","EUR/SEK","EUR/CHF","EUR/HUF","USD/CNY","USD/HKD","USD/SGD","USD/INR","USD/MXN","USD/PHP","USD/IDR","USD/THB","USD/MYR","USD/ZAR","USD/RUB","api","headers","params","config"],"mappings":"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"}