{"version":3,"file":"data-layer.cjs.production.min.js","sources":["../src/services/fetch/fetch.ts","../src/services/converter/converter.ts","../src/api/yahoo/const/commodities.ts","../src/api/yahoo/const/cryptocurrencies.ts","../src/api/yahoo/const/indices.ts","../src/api/yahoo/const/currencies.ts","../src/api/yahoo/yahoo.ts","../src/api/stooq/const /indices.ts","../src/api/stooq/const /cryptocurrencies.ts","../src/api/stooq/const /commodities.ts","../src/api/stooq/const /curriencies.ts","../src/api/stooq/stooq.ts","../src/api/forexclub/forexclub.constansts.ts","../src/api/forexclub/forexclub.ts"],"sourcesContent":["import axios, { AxiosPromise } from 'axios';\nimport { RequestConfig } from './fetch.interface';\n\nconst yahoo = axios.create({\n  baseURL: 'https://query1.finance.yahoo.com/v7/finance/download/',\n});\n\nconst apiMapper = {\n  yahoo,\n};\n\nexport const fetch = <T>({\n  api = 'yahoo',\n  url = '/',\n  method = 'GET',\n  headers = {},\n  params = {},\n  data = {},\n  ...config\n}: RequestConfig): AxiosPromise<T> => {\n  return apiMapper[api]({\n    url,\n    method,\n    headers,\n    params,\n    data,\n    ...config,\n  });\n};\n","import { ConverterInterface } from './converter.interface';\n\nexport class Converter<T extends string> implements ConverterInterface<T> {\n  constructor(private data: string | string[]) {}\n\n  toCSV() {\n    if (typeof this.data === 'string') {\n      this.data = this.data.split('\\n');\n    }\n    return this;\n  }\n\n  toJSON() {\n    if (Array.isArray(this.data)) {\n      const header = this.data[0].split(',');\n      const data = this.data.slice(1);\n      // @ts-ignore\n      this.data = data.reduce((acc, item) => {\n        const obj = {};\n\n        if (item.includes('null')) {\n          return acc;\n        }\n\n        item.split(',').forEach((val, i) => {\n          // @ts-ignore\n          obj[header[i].replace(' ', '')] = val;\n        });\n\n        return [...acc, obj];\n      }, <object[]>[]);\n\n      return this;\n    }\n    return this;\n  }\n\n  save() {\n    return this.data;\n  }\n}\n","export const commodities = {\n  energy: {\n    'CRUDE OIL BRENT': 'BZ=F',\n    'CRUDE OIL WTI': 'CL=F',\n    'NATURAL GAS': 'NG=F',\n  },\n  metals: {\n    GOLD: 'GC=F',\n    COPPER: 'HG=F',\n    PALLADIUM: 'PA=F',\n    SILVER: 'SI=F',\n    PLATINUM: 'PL=F',\n  },\n  agriculture: {\n    CORN: 'ZC=F',\n    'SOYBEAN OIL': 'ZL=F',\n    SOYBEAN: 'ZS=F',\n    WHEAT: 'ZW=F',\n  },\n  softs: {\n    COCOA: 'CC=F',\n    COFFEE: 'KC=F',\n    'ORANGE JUICE': 'OJ=F',\n    SUGAR: 'SB=F',\n  },\n};\n","export const cryptocurrencies = {\n  Bitcoin: 'BTC-USD',\n  Ethereum: 'ETH-USD',\n  'Binance Coin': 'BNB-USD',\n  XRP: 'XRP-USD',\n  Cardano: 'ADA-USD',\n  Solana: 'SOL-USD',\n  Dogecoin: 'DOGE-USD',\n  Polkadot: 'DOT-USD',\n  HEX: 'HEX-USD',\n  TRON: 'TRX-USD',\n  'SHIBA INU': 'SHIB-USD',\n  'UNUS SED LEO': 'LEO-USD',\n  Avalanche: 'AVAX-USD',\n  Polygon: 'MATIC-USD',\n  yOUcash: 'YOUC-USD',\n  Uniswap: 'UNI1-USD',\n  Litecoin: 'LTC-USD',\n  'Lido stETH': 'STETH-USD',\n  'FTX Token': 'FTT-USD',\n  Chainlink: 'LINK-USD',\n  Stellar: 'XLM-USD',\n  'Crypto.com Coin': 'CRO-USD',\n  'NEAR Protocol\t': 'NEAR-USD',\n  Algorand: 'ALGO-USD',\n  Cosmos: 'ATOM-USD',\n  Monero: 'XMR-USD',\n  'Bitcoin Cash': 'BCH-USD',\n  'Ethereum Classic': 'ETC-USD',\n  Chain: 'XCN1-USD',\n  VeChain: 'VET-USD',\n  Flow: 'FLOW-USD',\n  Decentraland: 'MANA-USD',\n  Hedera: 'HBAR-USD',\n  'Internet Computer': 'ICP-USD',\n  THETA: 'THETA-USD',\n  Elrond: 'EGLD-USD',\n  Frax: 'FRAX-USD',\n  'Axie Infinity': 'AXS-USD',\n  Toncoin: 'TONCOIN-USD',\n  'The Sandbox': 'SAND-USD',\n  ApeCoin: 'APE3-USD',\n  Tezos: 'XTZ-USD',\n  'Filecoin\t': 'FIL-USD',\n  'Helium\t': 'HNT-USD',\n  'Bitcoin SV': 'BSV-USD',\n  'KuCoin Token': 'KCS-USD',\n  'EOS-USD': 'EOS',\n  Zcash: 'ZEC-USD',\n  Maker: 'MKR-USD',\n  Aave: 'AAVE-USD',\n  IOTA: 'MIOTA-USD',\n  'Huobi Token': 'HT-USD',\n  eCash: 'XEC-USD',\n  Neutrino: 'USDN-USD',\n  'The Graph': 'GRT1-USD',\n  OKB: 'OKB-USD',\n  Liquity: 'LUSD-USD',\n  THORChain: 'RUNE-USD',\n  Klaytn: 'KLAY-USD',\n  Fantom: 'FTM-USD',\n  Waves: 'WAVES-USD',\n  Neo: 'NEO-USD',\n  Quant: 'QNT-USD',\n  'Basic Attention Token': 'BAT-USD',\n  'PAX Gold': 'PAXG-USD',\n  Chiliz: 'CHZ-USD',\n  Zilliqa: 'ZIL-USD',\n  BitTorrent: 'BTT-USD',\n  Loopring: 'LRC-USD',\n  Dash: 'DASH-USD',\n  Stacks: 'STX-USD',\n  DeFiChain: 'DFI-USD',\n  PancakeSwap: 'CAKE-USD',\n  'Green Metaverse Token': 'GMT3-USD',\n  'Enjin Coin': 'ENJ-USD',\n  Kusama: 'KSM-USD',\n  'Tether Gold': 'XAUT-USD',\n  Fruits: 'FRTS-USD',\n  'Curve DAO Token': 'CRV-USD',\n  Gala: 'GALA-USD',\n  Celo: 'CELO-USD',\n  Amp: 'AMP-USD',\n  Holo: 'HOT1-USD',\n  Kava: 'KAVA-USD',\n  '1inch Network': '1INCH-USD',\n  Nexo: 'NEXO-USD',\n  NEM: 'XEM-USD',\n  Storj: 'STORJ-USD',\n  'XDC Network': 'XDC-USD',\n  Safe: 'SAFE1-USD',\n  Mina: 'MINA-USD',\n  WEMIX: 'WEMIX-USD',\n  Synthetix: 'SNX-USD',\n  Decred: 'DCR-USD',\n  'Counos X': 'CCXX-USD',\n  Arweave: 'AR-USD',\n  GateToken: 'GT-USD',\n  Kadena: 'KDA-USD',\n  Qtum: 'QTUM-USD',\n  Symbol: 'XYM-USD',\n  Gnosis: 'GNO-USD',\n  Compound: 'COMP1-USD',\n  Threshold: 'T-USD',\n  'Bitcoin Gold': 'BTG-USD',\n  Harmony: 'ONE1-USD',\n  'Convex Finance': 'CVX-USD',\n  BORA: 'BORA-USD',\n  'Theta Fuel': 'TFUEL-USD',\n  IOST: 'IOST-USD',\n  'OMG Network': 'OMG-USD',\n  IoTeX: 'IOTX-USD',\n  Audius: 'AUDIO-USD',\n  'Oasis Network': 'ROSE-USD',\n  ICON: 'ICX-USD',\n  BinaryX: 'BNX-USD',\n  'The Transfer Token': 'TTT1-USD',\n  BitDAO: 'BIT1-USD',\n  'Kyber Network Crystal v2': 'KNC-USD',\n  TitanSwap: 'TITAN-USD',\n  Ravencoin: 'RVN-USD',\n  Ankr: 'ANKR-USD',\n  Celsius: 'CEL-USD',\n  '0x': 'ZRX-USD',\n  'Trust Wallet Token': 'TWT-USD',\n  NXM: 'NXM-USD',\n  Osmosis: 'OSMO-USD',\n  Serum: 'SRM-USD',\n  Golem: 'GLM-USD',\n  Terra: 'LUNA2-USD',\n  'WOO Network': 'WOO-USD',\n  MXC: 'MXC-USD',\n  LINK: 'LN-USD',\n  Balancer: 'BAL-USD',\n  JUST: 'JST-USD',\n  Livepeer: 'LPT-USD',\n  Ontology: 'ONT-USD',\n  Swipe: 'SXP-USD',\n  'Siacoin\t': 'SC-USD',\n  'SKALE Network': 'SKL-USD',\n  WAX: 'WAXP-USD',\n  'yearn.finance': 'YFI-USD',\n  Moonbeam: 'GLMR-USD',\n  'Immutable X': 'IMX1-USD',\n  SwissBorg: 'CHSB-USD',\n  Horizen: 'ZEN-USD',\n  'Ethereum Name Service': 'ENS-USD',\n  Astar: 'ASTR-USD',\n  LooksRare: 'LOOKS-USD',\n  Hive: 'HIVE-USD',\n  Polymath: 'POLY-USD',\n};\n","export const indices = [\n  {\n    name: 'Dow Jones',\n    symbol: '^DJI',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'NASDAQ 100',\n    symbol: '^NDX',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'NASDAQ Composite',\n    symbol: '^IXIC',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'S&P 500',\n    symbol: '^GSPC',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'CBOE Volatility',\n    symbol: '^VIX',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'US Dollar',\n    symbol: 'DX-Y.NYB',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'AEX',\n    symbol: '^AEX',\n    country: 'NL',\n    region: 'Europe',\n  },\n  {\n    name: 'CAC 40',\n    symbol: '^FCH',\n    country: 'FR',\n    region: 'Europe',\n  },\n  {\n    name: 'DAX',\n    symbol: '^GDAXI',\n    country: 'DE',\n    region: 'Europe',\n  },\n  {\n    name: 'Euro Stoxx 50',\n    symbol: '^STOXX50E',\n    country: 'DE',\n    region: 'Europe',\n  },\n  {\n    name: 'FTSE 100',\n    symbol: '^FTSE',\n    country: 'GB',\n    region: 'Europe',\n  },\n  {\n    name: 'FTSE MIB INDEX',\n    symbol: 'FTSEMIB.MI',\n    country: 'IT',\n    region: 'Europe',\n  },\n  {\n    name: 'IBEX 35',\n    symbol: '^IBEX',\n    country: 'ES',\n    region: 'Europe',\n  },\n  {\n    name: 'MOEX Russia',\n    symbol: 'IMOEX.ME',\n    country: 'RU',\n    region: 'Europe',\n  },\n  {\n    name: 'RTSI',\n    symbol: 'RTSI.ME',\n    country: 'RU',\n    region: 'Europe',\n  },\n  {\n    name: 'FTSE China A50',\n    symbol: 'XIN9.FGI',\n    country: 'CN',\n    region: 'Asia',\n  },\n  {\n    name: 'Hang Seng',\n    symbol: '^HSI',\n    country: 'CN',\n    region: 'Asia',\n  },\n  {\n    name: 'Nikkei 225',\n    symbol: '^N225',\n    country: 'JP',\n    region: 'Asia',\n  },\n];\n","\nexport const currencies = {\n  \"EUR/USD\": \"EURUSD=X\",\n  \"USD/JPY\": \"JPY=X\",\n  \"GBP/USD\": \"GBPUSD=X\",\n  \"AUD/USD\": \"AUDUSD=X\",\n  \"NZD/USD\": \"NZDUSD=X\",\n  \"EUR/JPY\": \"EURJPY=X\",\n  \"GBP/JPY\": \"GBPJPY=X\",\n  \"EUR/GBP\": \"EURGBP=X\",\n  \"EUR/CAD\": \"EURCAD=X\",\n  \"EUR/SEK\": \"EURSEK=X\",\n  \"EUR/CHF\": \"EURCHF=X\",\n  \"EUR/HUF\": \"EURHUF=X\",\n  \"USD/CNY\": \"CNY=X\",\n  \"USD/HKD\": \"HKD=X\",\n  \"USD/SGD\": \"SGD=X\",\n  \"USD/INR\": \"INR=X\",\n  \"USD/MXN\": \"MXN=X\",\n  \"USD/PHP\": \"PHP=X\",\n  \"USD/IDR\": \"IDR=X\",\n  \"USD/THB\": \"THB=X\",\n  \"USD/MYR\": \"IDR=X\",\n  \"USD/ZAR\": \"ZAR=X\",\n  \"USD/RUB\": \"RUB=X\",\n}","import { TickerOptions, YahooInterface, TickerGroups } from './yahoo.interface';\nimport { FetchInterface } from '../../services/fetch/fetch.interface';\nimport { commodities } from './const/commodities';\nimport { cryptocurrencies } from './const/cryptocurrencies';\nimport { indices } from './const/indices';\nimport { currencies } from './const/currencies';\n\nexport class Yahoo implements YahooInterface {\n  constructor(private readonly fetcher: FetchInterface) {}\n\n  getTickerList(type?: TickerGroups) {\n    const mappedType = {\n      commodities,\n      cryptocurrencies,\n      indices,\n      currencies,\n    };\n    return type ? mappedType[type] : mappedType;\n  }\n\n  async getTicker(ticker: string, options: TickerOptions) {\n    const url = new URL(\n      `https://query1.finance.yahoo.com/v7/finance/download/${ticker}`\n    );\n    Object.entries(options).forEach(([key, value]) =>\n      url.searchParams.set(key, String(value))\n    );\n\n    const { data } = await this.fetcher<string>({\n      url: url.toString(),\n      method: 'GET',\n    });\n\n    return data;\n  }\n}\n","export const indices = {\n  asia: [\n    {\n      symbol: '^AOR',\n      name: 'ALL ORDINARIES',\n      country: 'AU',\n    },\n    {\n      symbol: '^HSI',\n      name: 'HANG SENG INDEX',\n      country: 'CN',\n    },\n    {\n      symbol: '^JCI',\n      name: 'JAKARTA COMPOSITE',\n      country: 'ID',\n    },\n    {\n      symbol: '^KLCI',\n      name: 'KUALA LUMPUR COMPOSITE',\n      country: 'MY',\n    },\n    {\n      symbol: '^KOSPI',\n      name: 'KOSPI',\n      country: 'KR',\n    },\n    {\n      symbol: '^NKX',\n      name: 'NIKKEI 225',\n      country: 'JP',\n    },\n    {\n      symbol: '^NZ50',\n      name: 'NZX 50',\n      country: 'NZ',\n    },\n    {\n      symbol: '^PSEI',\n      name: 'PSEI',\n      country: 'PH',\n    },\n    {\n      symbol: '^SET',\n      name: 'SET',\n      country: 'TH',\n    },\n    {\n      symbol: '^SHBS',\n      name: 'SHANGHAI B-SHARE',\n      country: 'CN',\n    },\n    {\n      symbol: '^SHC',\n      name: 'SHANGHAI COMPOSITE',\n      country: 'CN',\n    },\n    {\n      symbol: '^SNX',\n      name: 'SENSEX 30',\n      country: 'IN',\n    },\n    {\n      symbol: '^STI',\n      name: 'STRAITS TIMES',\n      country: 'SG',\n    },\n    {\n      symbol: '^TWSE',\n      name: 'TAIEX',\n      country: 'TW',\n    },\n  ],\n  europe: [\n    {\n      symbol: 'A5.C',\n      name: 'ATX',\n      country: 'AT',\n    },\n    {\n      symbol: '^AEX',\n      name: 'AEX',\n      country: 'NL',\n    },\n    {\n      symbol: '^ATH',\n      name: 'ATHEX COMPOSITE',\n      country: 'GR',\n    },\n    {\n      symbol: '^BEL20',\n      name: 'BEL 20',\n      country: 'BE',\n    },\n    {\n      symbol: '^BET',\n      name: 'BET',\n      country: 'RO',\n    },\n    {\n      symbol: '^BUX',\n      name: 'BUX',\n      country: 'HU',\n    },\n    {\n      symbol: '^CAC',\n      name: 'CAC 40',\n      country: 'FR',\n    },\n    {\n      symbol: '^DAX',\n      name: 'DAX',\n      country: 'DE',\n    },\n    {\n      symbol: '^FMIB',\n      name: 'FTSE MIB',\n      country: 'IT',\n    },\n    {\n      symbol: '^FTM',\n      name: 'FTSE 250 ',\n      country: 'UK',\n    },\n    {\n      symbol: '^HEX',\n      name: 'OMX HELSINKI',\n      country: 'FI',\n    },\n    {\n      symbol: '^IBEX',\n      name: 'IBEX',\n      country: 'ES',\n    },\n    {\n      symbol: '^ICEX',\n      name: 'OMX ICELAND ALL SHARE',\n      country: 'IS',\n    },\n    {\n      symbol: '^MDAX',\n      name: 'MDAX',\n      country: 'DE',\n    },\n    {\n      symbol: '^MOEX',\n      name: 'MOEX',\n      country: 'RU',\n    },\n    {\n      symbol: '^OMXR',\n      name: 'OMX RIGA',\n      country: 'LV',\n    },\n    {\n      symbol: '^OMXS',\n      name: 'OMX STOCKHOLM 30',\n      country: 'SE',\n    },\n    {\n      symbol: '^OMXT',\n      name: 'OMX TALLINN',\n      country: 'EE',\n    },\n    {\n      symbol: '^OMXV',\n      name: 'OMX VILNIUS',\n      country: 'LT',\n    },\n    {\n      symbol: '^OSEAX',\n      name: 'OSE ALL SHARE',\n      country: 'NO',\n    },\n    {\n      symbol: '^PSI20',\n      name: 'PSI 20',\n      country: 'PT',\n    },\n    {\n      symbol: '^PX',\n      name: 'PX',\n      country: 'CZ',\n    },\n    {\n      symbol: '^RTS',\n      name: 'RTS',\n      country: 'RU',\n    },\n    {\n      symbol: '^SAX',\n      name: 'SAX',\n      country: 'SK',\n    },\n    {\n      symbol: '^SDXP',\n      name: 'SDAX',\n      country: 'DE',\n    },\n    {\n      symbol: '^SMI',\n      name: 'SWISS MARKET',\n      country: 'CH',\n    },\n    {\n      symbol: '^SOFIX',\n      name: 'SOFIX',\n      country: 'BG',\n    },\n    {\n      symbol: '^TDXP',\n      name: 'TECDAX',\n      country: 'DE',\n    },\n    {\n      symbol: '^UKX',\n      name: 'UK 100 CFD',\n      country: 'UK',\n    },\n    {\n      symbol: '^UX',\n      name: 'UX',\n      country: 'UA',\n    },\n    {\n      symbol: 'WIG',\n      name: 'WIG',\n      country: 'PL',\n    },\n    {\n      symbol: 'WIG20',\n      name: 'WIG20',\n      country: 'PL',\n    },\n    {\n      symbol: '^XU100',\n      name: 'XU100',\n      country: 'TR',\n    },\n  ],\n  america: [\n    {\n      symbol: '^DJC',\n      name: 'DOW JONES COMPOSITE',\n      country: 'US',\n    },\n    {\n      symbol: '^DJI',\n      name: 'DOW JONES INDUSTRIAL',\n      country: 'US',\n    },\n    {\n      symbol: '^DJT',\n      name: 'DOW JONES TRANSPORTATION',\n      country: 'US',\n    },\n    {\n      symbol: '^DJU',\n      name: 'DOW JONES UTILITIES',\n      country: 'US',\n    },\n    {\n      symbol: '^NDQ',\n      name: 'NASDAQ COMPOSITE',\n      country: 'US',\n    },\n    {\n      symbol: '^NDX',\n      name: 'NASDAQ 100',\n      country: 'US',\n    },\n    {\n      symbol: '^SPX',\n      name: 'S&P 500',\n      country: 'US',\n    },\n    {\n      symbol: '^BVP',\n      name: 'BOVESPA',\n      country: 'BR',\n    },\n    {\n      symbol: '^IPC',\n      name: 'MEXICAN BOLSA',\n      country: 'MX',\n    },\n    {\n      symbol: '^IPSA',\n      name: 'IPSA',\n      country: 'CL',\n    },\n    {\n      symbol: '^MRV',\n      name: 'MERVAL',\n      country: 'AR',\n    },\n  ],\n  middleEast: [\n    {\n      symbol: '^TASI',\n      name: 'TADAWUL ALL SHARE',\n      country: 'SA',\n    },\n  ],\n};\n","export const cryptocurrencies = {\n  '0x': 'zrx.v',\n  '1inch Network': '1inch.v',\n  Aave: 'aave.v',\n  Algorand: 'algo.v',\n  Amp: 'amp.v',\n  Ankr: 'ankr.v',\n  ApeCoin: 'ape3.v',\n  Arweave: 'ar.v',\n  Astar: 'astr.v',\n  Audius: 'audio.v',\n  Avalanche: 'avax.v',\n  'Axie Infinity': 'axs.v',\n  BORA: 'bora.v',\n  Balancer: 'bal.v',\n  'Basic Attention Token': 'bat.v',\n  'Binance Coin': 'bnb.v',\n  BinaryX: 'bnx.v',\n  BitDAO: 'bit1.v',\n  BitTorrent: 'btt.v',\n  'Bitcoin Cash': 'bch.v',\n  'Bitcoin Gold': 'btg.v',\n  'Bitcoin SV': 'bsv.v',\n  Bitcoin: 'btc.v',\n  Cardano: 'ada.v',\n  Celo: 'celo.v',\n  Celsius: 'cel.v',\n  Chain: 'xcn1.v',\n  Chainlink: 'link.v',\n  Chiliz: 'chz.v',\n  Compound: 'comp1.v',\n  'Convex Finance': 'cvx.v',\n  Cosmos: 'atom.v',\n  'Counos X': 'ccxx.v',\n  'Crypto.com Coin': 'cro.v',\n  'Curve DAO Token': 'crv.v',\n  Dash: 'dash.v',\n  DeFiChain: 'dfi.v',\n  Decentraland: 'mana.v',\n  Decred: 'dcr.v',\n  Dogecoin: 'doge.v',\n  'EOS-USD': 'eos.v',\n  Elrond: 'egld.v',\n  'Enjin Coin': 'enj.v',\n  'Ethereum Classic': 'etc.v',\n  'Ethereum Name Service': 'ens.v',\n  Ethereum: 'eth.v',\n  'FTX Token': 'ftt.v',\n  Fantom: 'ftm.v',\n  'Filecoin ': 'fil.v',\n  Flow: 'flow.v',\n  Frax: 'frax.v',\n  Fruits: 'frts.v',\n  Gala: 'gala.v',\n  GateToken: 'gt.v',\n  Gnosis: 'gno.v',\n  Golem: 'glm.v',\n  'Green Metaverse Token': 'gmt3.v',\n  HEX: 'hex.v',\n  Harmony: 'one1.v',\n  Hedera: 'hbar.v',\n  'Helium ': 'hnt.v',\n  Hive: 'hive.v',\n  Holo: 'hot1.v',\n  Horizen: 'zen.v',\n  'Huobi Token': 'ht.v',\n  ICON: 'icx.v',\n  IOST: 'iost.v',\n  IOTA: 'miota.v',\n  'Immutable X': 'imx1.v',\n  'Internet Computer': 'icp.v',\n  IoTeX: 'iotx.v',\n  JUST: 'jst.v',\n  Kadena: 'kda.v',\n  Kava: 'kava.v',\n  Klaytn: 'klay.v',\n  'KuCoin Token': 'kcs.v',\n  Kusama: 'ksm.v',\n  'Kyber Network Crystal v2': 'knc.v',\n  LINK: 'ln.v',\n  'Lido stETH': 'steth.v',\n  Liquity: 'lusd.v',\n  Litecoin: 'ltc.v',\n  Livepeer: 'lpt.v',\n  LooksRare: 'looks.v',\n  Loopring: 'lrc.v',\n  MXC: 'mxc.v',\n  Maker: 'mkr.v',\n  Mina: 'mina.v',\n  Monero: 'xmr.v',\n  Moonbeam: 'glmr.v',\n  'NEAR Protocol ': 'near.v',\n  NEM: 'xem.v',\n  NXM: 'nxm.v',\n  Neo: 'neo.v',\n  Neutrino: 'usdn.v',\n  Nexo: 'nexo.v',\n  OKB: 'okb.v',\n  'OMG Network': 'omg.v',\n  'Oasis Network': 'rose.v',\n  Ontology: 'ont.v',\n  Osmosis: 'osmo.v',\n  'PAX Gold': 'paxg.v',\n  PancakeSwap: 'cake.v',\n  Polkadot: 'dot.v',\n  Polygon: 'matic.v',\n  Polymath: 'poly.v',\n  Qtum: 'qtum.v',\n  Quant: 'qnt.v',\n  Ravencoin: 'rvn.v',\n  'SHIBA INU': 'shib.v',\n  'SKALE Network': 'skl.v',\n  Safe: 'safe1.v',\n  Serum: 'srm.v',\n  'Siacoin ': 'sc.v',\n  Solana: 'sol.v',\n  Stacks: 'stx.v',\n  Stellar: 'xlm.v',\n  Storj: 'storj.v',\n  Swipe: 'sxp.v',\n  SwissBorg: 'chsb.v',\n  Symbol: 'xym.v',\n  Synthetix: 'snx.v',\n  THETA: 'theta.v',\n  THORChain: 'rune.v',\n  TRON: 'trx.v',\n  Terra: 'luna2.v',\n  'Tether Gold': 'xaut.v',\n  Tezos: 'xtz.v',\n  'The Graph': 'grt1.v',\n  'The Sandbox': 'sand.v',\n  'The Transfer Token': 'ttt1.v',\n  'Theta Fuel': 'tfuel.v',\n  Threshold: 't.v',\n  TitanSwap: 'titan.v',\n  Toncoin: 'toncoin.v',\n  'Trust Wallet Token': 'twt.v',\n  'UNUS SED LEO': 'leo.v',\n  Uniswap: 'uni1.v',\n  VeChain: 'vet.v',\n  WAX: 'waxp.v',\n  WEMIX: 'wemix.v',\n  'WOO Network': 'woo.v',\n  Waves: 'waves.v',\n  'XDC Network': 'xdc.v',\n  XRP: 'xrp.v',\n  Zcash: 'zec.v',\n  Zilliqa: 'zil.v',\n  eCash: 'xec.v',\n  yOUcash: 'youc.v',\n  'yearn.finance': 'yfi.v',\n};\n","export const commodities = {\n  energy: {\n    'CRUDE OIL BRENT': 'CB.F',\n    'CRUDE OIL WTI': 'CL.F',\n    'NATURAL GAS': 'NG.F',\n  },\n  metals: {\n    GOLD: 'GC.F',\n    COPPER: 'HG.F',\n    PALLADIUM: 'PA.F',\n    PLATINUM: 'PL.F',\n    SILVER: 'SI.F',\n  },\n  agriculture: {\n    CORN: 'ZC.F',\n    'SOYBEAN OIL': 'ZL.F',\n    SOYBEAN: 'ZS.F',\n    WHEAT: 'ZW.F',\n  },\n  softs: {\n    COCOA: 'CC.F',\n    COFFEE: 'KC.F',\n    'ORANGE JUICE': 'OJ.F',\n    SUGAR: 'SB.F',\n  },\n};\n","export const currencies = [\n  {\n    symbol: 'EURUSD',\n    name: 'EUR/USD',\n    category: 'popular',\n  },\n  {\n    symbol: 'GBPUSD',\n    name: 'GBP/USD',\n    category: 'popular',\n  },\n  {\n    symbol: 'AUDUSD',\n    name: 'AUD/USD',\n    category: 'popular',\n  },\n  {\n    symbol: 'USDCHF',\n    name: 'USD/CHF',\n    category: 'popular',\n  },\n  {\n    symbol: 'USDCHF',\n    name: 'USD/CHF',\n    category: 'popular',\n  },\n  {\n    symbol: 'USDCAD',\n    name: 'USD/CAD',\n    category: 'popular',\n  },\n  {\n    symbol: 'NZDUSD',\n    name: 'NZD/USD',\n    category: 'popular',\n  },\n  {\n    symbol: 'USDJPY',\n    name: 'USD/JPY',\n    category: 'popular',\n  },\n  {\n    symbol: 'EURJPY',\n    name: 'EUR/JPY',\n    category: 'popular',\n  },\n  {\n    symbol: 'GBPJPY',\n    name: 'GBP/JPY',\n    category: 'popular',\n  },\n  {\n    symbol: 'GBPUSD',\n    name: 'GBP/USD',\n    category: 'popular',\n  },\n  {\n    symbol: 'GBPCHF',\n    name: 'GBP/CHF',\n    category: 'popular',\n  },\n  {\n    symbol: 'EURNOK',\n    name: 'EUR/NOK',\n    category: 'popular',\n  },\n  {\n    symbol: 'EURSEK',\n    name: 'EUR/SEK',\n    category: 'popular',\n  },\n  {\n    symbol: 'CHFSGD',\n    name: 'CHF/SGD',\n    category: 'exotic',\n  },\n  {\n    symbol: 'EURCNH',\n    name: 'EUR/CNH',\n    category: 'exotic',\n  },\n  {\n    symbol: 'EURMXN',\n    name: 'EUR/MXN',\n    category: 'exotic',\n  },\n  {\n    symbol: 'EURNOK',\n    name: 'EUR/NOK',\n    category: 'exotic',\n  },\n  {\n    symbol: 'EURSEK',\n    name: 'EUR/SEK',\n    category: 'exotic',\n  },\n  {\n    symbol: 'EURSGD',\n    name: 'EUR/SGD',\n    category: 'exotic',\n  },\n  {\n    symbol: 'EURTRY',\n    name: 'EUR/TRY',\n    category: 'exotic',\n  },\n  {\n    symbol: 'GBPSEK',\n    name: 'GBP/SEK',\n    category: 'exotic',\n  },\n  {\n    symbol: 'NOKJPY',\n    name: 'NOK/JPY',\n    category: 'exotic',\n  },\n  {\n    symbol: 'SGDJPY',\n    name: 'SGD/JPY',\n    category: 'exotic',\n  },\n  {\n    symbol: 'USDCLP',\n    name: 'USD/CLP',\n    category: 'exotic',\n  },\n  {\n    symbol: 'USDCNH',\n    name: 'USD/CNH',\n    category: 'exotic',\n  },\n  {\n    symbol: 'USDDKK',\n    name: 'USD/DKK',\n    category: 'exotic',\n  },\n  {\n    symbol: 'USDMXN',\n    name: 'USD/MXN',\n    category: 'exotic',\n  },\n  {\n    symbol: 'USDNOK',\n    name: 'USD/NOK',\n    category: 'exotic',\n  },\n  {\n    symbol: 'USDSEK',\n    name: 'USD/SEK',\n    category: 'exotic',\n  },\n  {\n    symbol: 'USDSGD',\n    name: 'USD/SGD',\n    category: 'exotic',\n  },\n  {\n    symbol: 'USDTRY',\n    name: 'USD/TRY',\n    category: 'exotic',\n  },\n  {\n    symbol: 'USDZAR',\n    name: 'USD/ZAR',\n    category: 'exotic',\n  },\n  {\n    symbol: 'AUDCAD',\n    name: 'AUD/CAD',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'AUDCHF',\n    name: 'AUD/CHF',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'AUDJPY',\n    name: 'AUD/JPY',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'AUDNZD',\n    name: 'AUD/NZD',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'CADCHF',\n    name: 'CAD/CHF',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'CADJPY',\n    name: 'CAD/JPY',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'CHFJPY',\n    name: 'CHF/JPY',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'EURAUD',\n    name: 'EUR/AUD',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'EURCAD',\n    name: 'EUR/CAD',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'EURCHF',\n    name: 'EUR/CHF',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'EURGBP',\n    name: 'EUR/GBP',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'EURJPY',\n    name: 'EUR/JPY',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'EURNZD',\n    name: 'EUR/NZD',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'EURPLN',\n    name: 'EUR/PLN',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'GBPAUD',\n    name: 'GBP/AUD',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'GBPCAD',\n    name: 'GBP/CAD',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'GBPCHF',\n    name: 'GBP/CHF',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'GBPJPY',\n    name: 'GBP/JPY',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'GBPNZD',\n    name: 'GBP/NZD',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'NZDCAD',\n    name: 'NZD/CAD',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'NZDCHF',\n    name: 'NZD/CHF',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'NZDJPY',\n    name: 'NZD/JPY',\n    category: 'cross-courses',\n  },\n  {\n    symbol: 'USDPLN',\n    name: 'USD/PLN',\n    category: 'cross-courses',\n  },\n];\n","import { StooqInterface, TickerGroups, TickerOptions } from './stooq.interface';\nimport { indices } from './const /indices';\nimport { cryptocurrencies } from './const /cryptocurrencies';\nimport { commodities } from './const /commodities';\nimport { currencies } from './const /curriencies';\nimport { FetchInterface } from '../../services/fetch/fetch.interface';\n\nexport class Stooq implements StooqInterface {\n  constructor(private readonly fetcher: FetchInterface) {}\n\n  getTickerList(type?: TickerGroups) {\n    const mappedType = {\n      commodities,\n      cryptocurrencies,\n      indices,\n      currencies,\n    };\n    return type ? mappedType[type] : mappedType;\n  }\n\n  async getTicker(\n    ticker: string,\n    { period1, period2, interval, includeAdjustedClose }: TickerOptions\n  ) {\n    const url = new URL(`https://stooq.com/q/d/l/?s=${ticker}`);\n\n    url.searchParams.set('d1', String(period1));\n    url.searchParams.set('d2', String(period2));\n    url.searchParams.set('i', String(interval));\n    url.searchParams.set('o', `${includeAdjustedClose ? '1' : '0'}000000`);\n\n    const { data } = await this.fetcher<string>({\n      url: url.toString(),\n      method: 'GET',\n    });\n\n    return data;\n  }\n}\n","\nexport const regions = [\n  'HK',\n  'HU',\n  'MX',\n  'SG',\n  'JP',\n  'BR',\n  'IT',\n  'KR',\n  'TR',\n  'RO',\n  'CN',\n  'PL',\n  'PT',\n  'ID',\n  'SE',\n  'LU',\n  'FI',\n  'DE',\n  'AU',\n  'RU',\n  'IE',\n  'ZA',\n  'GB',\n  'IN',\n  'NL',\n  'CH',\n  'ES',\n  'CZ',\n  'FR',\n  'EA',\n  'NO',\n  'AT',\n  'CY',\n  'GR',\n  'DK',\n  'CA',\n  'US',\n  'NZ',\n  'BE'\n]","import { FetchInterface } from '../../services/fetch/fetch.interface';\nimport {\n  CalendarOptions,\n  CalendarResponse,\n  ForexClubInterface,\n} from './forexclub.interface';\nimport { regions } from './forexclub.constansts';\n\nexport class ForexClub implements ForexClubInterface {\n  constructor(private readonly fetcher: FetchInterface) {}\n\n  getRegions(): string[] {\n    return regions;\n  }\n\n  async getCalendar(options: CalendarOptions): Promise<CalendarResponse> {\n    const url = new URL('https://economcalendar.fxclub.org/api/events/');\n    Object.entries(options).forEach(([key, value]) =>\n      url.searchParams.set(key, value)\n    );\n\n    const { data } = await this.fetcher<CalendarResponse>({\n      url: url.toString(),\n      method: 'GET',\n    });\n\n    return data;\n  }\n}\n"],"names":["apiMapper","yahoo","axios","create","baseURL","Converter","data","this","_proto","toCSV","split","toJSON","Array","isArray","header","slice","reduce","acc","item","obj","includes","forEach","val","i","replace","save","commodities","energy","CRUDE OIL BRENT","CRUDE OIL WTI","NATURAL GAS","metals","GOLD","COPPER","PALLADIUM","SILVER","PLATINUM","agriculture","CORN","SOYBEAN OIL","SOYBEAN","WHEAT","softs","COCOA","COFFEE","ORANGE JUICE","SUGAR","cryptocurrencies","Bitcoin","Ethereum","Binance Coin","XRP","Cardano","Solana","Dogecoin","Polkadot","HEX","TRON","SHIBA INU","UNUS SED LEO","Avalanche","Polygon","yOUcash","Uniswap","Litecoin","Lido stETH","FTX Token","Chainlink","Stellar","Crypto.com Coin","NEAR Protocol\t","Algorand","Cosmos","Monero","Bitcoin Cash","Ethereum Classic","Chain","VeChain","Flow","Decentraland","Hedera","Internet Computer","THETA","Elrond","Frax","Axie Infinity","Toncoin","The Sandbox","ApeCoin","Tezos","Filecoin\t","Helium\t","Bitcoin SV","KuCoin Token","EOS-USD","Zcash","Maker","Aave","IOTA","Huobi Token","eCash","Neutrino","The Graph","OKB","Liquity","THORChain","Klaytn","Fantom","Waves","Neo","Quant","Basic Attention Token","PAX Gold","Chiliz","Zilliqa","BitTorrent","Loopring","Dash","Stacks","DeFiChain","PancakeSwap","Green Metaverse Token","Enjin Coin","Kusama","Tether Gold","Fruits","Curve DAO Token","Gala","Celo","Amp","Holo","Kava","1inch Network","Nexo","NEM","Storj","XDC Network","Safe","Mina","WEMIX","Synthetix","Decred","Counos X","Arweave","GateToken","Kadena","Qtum","Symbol","Gnosis","Compound","Threshold","Bitcoin Gold","Harmony","Convex Finance","BORA","Theta Fuel","IOST","OMG Network","IoTeX","Audius","Oasis Network","ICON","BinaryX","The Transfer Token","BitDAO","Kyber Network Crystal v2","TitanSwap","Ravencoin","Ankr","Celsius","0x","Trust Wallet Token","NXM","Osmosis","Serum","Golem","Terra","WOO Network","MXC","LINK","Balancer","JUST","Livepeer","Ontology","Swipe","Siacoin\t","SKALE Network","WAX","yearn.finance","Moonbeam","Immutable X","SwissBorg","Horizen","Ethereum Name Service","Astar","LooksRare","Hive","Polymath","indices","name","symbol","country","region","currencies","EUR/USD","USD/JPY","GBP/USD","AUD/USD","NZD/USD","EUR/JPY","GBP/JPY","EUR/GBP","EUR/CAD","EUR/SEK","EUR/CHF","EUR/HUF","USD/CNY","USD/HKD","USD/SGD","USD/INR","USD/MXN","USD/PHP","USD/IDR","USD/THB","USD/MYR","USD/ZAR","USD/RUB","Yahoo","fetcher","getTickerList","type","mappedType","getTicker","ticker","options","url","URL","Object","entries","searchParams","set","String","_context","toString","method","asia","europe","america","middleEast","Filecoin ","Helium ","NEAR Protocol ","Siacoin ","category","Stooq","period1","period2","interval","includeAdjustedClose","regions","ForexClub","getRegions","getCalendar","api","headers","params","config"],"mappings":"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,OAAQ,SACRD,KAAM,UACNsD,SAAU,UAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,UAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,UAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,UAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,UAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,UAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,UAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,iBAEZ,CACErD,OAAQ,SACRD,KAAM,UACNsD,SAAU,kBChRDC,aACX,WAA6B1B,GAAA7N,aAAA6N,EAD/B,kBAAA,OAAA5N,EAGE6N,cAAA,SAAcC,GACZ,IAAMC,EAAa,CACjB7M,YAAAA,EACAqB,iBAAAA,EACAuJ,QAAAA,EACAK,WAAAA,GAEF,OAAO2B,EAAOC,EAAWD,GAAQC,GAVrC/N,EAaQgO,qBAbR,kBAaE,WACEC,KADF,cAAA,6BAAA,OAAA,sBAAA,OAAA,OAEIsB,IAAAA,QAASC,IAAAA,QAASC,IAAAA,SAAUC,IAAAA,sBAExBvB,EAAM,IAAIC,kCAAkCH,IAE9CM,aAAaC,IAAI,KAAMC,OAAOc,IAClCpB,EAAII,aAAaC,IAAI,KAAMC,OAAOe,IAClCrB,EAAII,aAAaC,IAAI,IAAKC,OAAOgB,IACjCtB,EAAII,aAAaC,IAAI,KAAQkB,EAAuB,IAAM,eAT5DhB,SAWyB3O,KAAK6N,QAAgB,CAC1CO,IAAKA,EAAIQ,WACTC,OAAQ,QAbZ,OAAA,gCAWU9O,MAXV,QAAA,UAAA,+BAbF,OAAA,cAAA,wCCNa6P,EAAU,CACrB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MChCWC,aACX,WAA6BhC,GAAA7N,aAAA6N,EAD/B,kBAAA,OAAA5N,EAGE6P,WAAA,WACE,OAAOF,GAJX3P,EAOQ8P,uBAPR,kBAOE,WAAkB5B,GAAlB,MAAA,6BAAA,OAAA,sBAAA,OAAA,OACQC,EAAM,IAAIC,IAAI,iDACpBC,OAAOC,QAAQJ,GAASrN,SAAQ,YAAA,OAC9BsN,EAAII,aAAaC,kBAHrBE,SAMyB3O,KAAK6N,QAA0B,CACpDO,IAAKA,EAAIQ,WACTC,OAAQ,QARZ,OAAA,gCAMU9O,MANV,OAAA,UAAA,+BAPF,OAAA,YAAA,8HbGqB,oBACnBiQ,IAAAA,aAAM,cACN5B,IAAAA,aAAM,UACNS,OAAAA,aAAS,YACToB,QAAAA,aAAU,SACVC,OAAAA,aAAS,SACTnQ,KAAAA,aAAO,KACJoQ,0IAEH,OAAO1Q,EAAUuQ,MACf5B,IAAAA,EACAS,OAAAA,EACAoB,QAAAA,EACAC,OAAAA,EACAnQ,KAAAA,GACGoQ"}