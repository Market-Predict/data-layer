{"version":3,"file":"data-layer.cjs.production.min.js","sources":["../src/services/fetch/fetch.ts","../src/services/converter/converter.ts","../src/api/yahoo/const/commodities.ts","../src/api/yahoo/const/cryptocurrencies.ts","../src/api/yahoo/const/indices.ts","../src/api/yahoo/const/currencies.ts","../src/api/yahoo/yahoo.ts","../src/api/forexclub/forexclub.constansts.ts","../src/api/forexclub/forexclub.ts"],"sourcesContent":["import axios, { AxiosPromise } from 'axios';\nimport { RequestConfig } from './fetch.interface';\n\nconst yahoo = axios.create({\n  baseURL: 'https://query1.finance.yahoo.com/v7/finance/download/',\n});\n\nconst apiMapper = {\n  yahoo,\n};\n\nexport const fetch = <T>({\n  api = 'yahoo',\n  url = '/',\n  method = 'GET',\n  headers = {},\n  params = {},\n  data = {},\n  ...config\n}: RequestConfig): AxiosPromise<T> => {\n  return apiMapper[api]({\n    url,\n    method,\n    headers,\n    params,\n    data,\n    ...config,\n  });\n};\n","import { ConverterInterface } from './converter.interface';\n\nexport class Converter<T extends string> implements ConverterInterface<T> {\n  constructor(private data: string | string[]) {}\n\n  toCSV() {\n    if (typeof this.data === 'string') {\n      this.data = this.data.split('\\n');\n    }\n    return this;\n  }\n\n  toJSON() {\n    if (Array.isArray(this.data)) {\n      const header = this.data[0].split(',');\n      const data = this.data.slice(1);\n      // @ts-ignore\n      this.data = data.reduce((acc, item) => {\n        const obj = {};\n\n        if (item.includes('null')) {\n          return acc;\n        }\n\n        item.split(',').forEach((val, i) => {\n          // @ts-ignore\n          obj[header[i].replace(' ', '')] = val;\n        });\n\n        return [...acc, obj];\n      }, <object[]>[]);\n\n      return this;\n    }\n    return this;\n  }\n\n  save() {\n    return this.data;\n  }\n}\n","\nexport const commodities = {\n  \"energy\": {\n    \"Crude Oil\": \"CL=F\",\n    \"Brent Crude Oil\": \"BZ=F\",\n    \"Natural Gas\": \"NG=F\",\n    \"Heating Oil\": \"HO=F\",\n  },\n  metals: {\n    \"Gold\": \"GC=F\",\n    \"Silver\": \"SI=F\",\n    \"Copper\": \"HG=F\",\n    \"Platinum\": \"PA=F\",\n  },\n  agriculture: {\n    \"Coffee\": \"KC=F\",\n    \"Corn\": \"ZC=F\",\n    \"Wheat\": \"KE=F\",\n    \"Sugar\": \"SB=F\",\n    \"Cotton\": \"CT=F\",\n    \"Cocoa\": \"CC=F\",\n  },\n}; \n","export const cryptocurrencies = {\n  Bitcoin: 'BTC-USD',\n  Ethereum: 'ETH-USD',\n  'Binance Coin': 'BNB-USD',\n  XRP: 'XRP-USD',\n  Cardano: 'ADA-USD',\n  Solana: 'SOL-USD',\n  Dogecoin: 'DOGE-USD',\n  Polkadot: 'DOT-USD',\n  HEX: 'HEX-USD',\n  TRON: 'TRX-USD',\n  'SHIBA INU': 'SHIB-USD',\n  'UNUS SED LEO': 'LEO-USD',\n  Avalanche: 'AVAX-USD',\n  Polygon: 'MATIC-USD',\n  yOUcash: 'YOUC-USD',\n  Uniswap: 'UNI1-USD',\n  Litecoin: 'LTC-USD',\n  'Lido stETH': 'STETH-USD',\n  'FTX Token': 'FTT-USD',\n  Chainlink: 'LINK-USD',\n  Stellar: 'XLM-USD',\n  'Crypto.com Coin': 'CRO-USD',\n  'NEAR Protocol\t': 'NEAR-USD',\n  Algorand: 'ALGO-USD',\n  Cosmos: 'ATOM-USD',\n  Monero: 'XMR-USD',\n  'Bitcoin Cash': 'BCH-USD',\n  'Ethereum Classic': 'ETC-USD',\n  Chain: 'XCN1-USD',\n  VeChain: 'VET-USD',\n  Flow: 'FLOW-USD',\n  Decentraland: 'MANA-USD',\n  Hedera: 'HBAR-USD',\n  'Internet Computer': 'ICP-USD',\n  THETA: 'THETA-USD',\n  Elrond: 'EGLD-USD',\n  Frax: 'FRAX-USD',\n  'Axie Infinity': 'AXS-USD',\n  Toncoin: 'TONCOIN-USD',\n  'The Sandbox': 'SAND-USD',\n  ApeCoin: 'APE3-USD',\n  Tezos: 'XTZ-USD',\n  'Filecoin\t': 'FIL-USD',\n  'Helium\t': 'HNT-USD',\n  'Bitcoin SV': 'BSV-USD',\n  'KuCoin Token': 'KCS-USD',\n  'EOS-USD': 'EOS',\n  Zcash: 'ZEC-USD',\n  Maker: 'MKR-USD',\n  Aave: 'AAVE-USD',\n  IOTA: 'MIOTA-USD',\n  'Huobi Token': 'HT-USD',\n  eCash: 'XEC-USD',\n  Neutrino: 'USDN-USD',\n  'The Graph': 'GRT1-USD',\n  OKB: 'OKB-USD',\n  Liquity: 'LUSD-USD',\n  THORChain: 'RUNE-USD',\n  Klaytn: 'KLAY-USD',\n  Fantom: 'FTM-USD',\n  Waves: 'WAVES-USD',\n  Neo: 'NEO-USD',\n  Quant: 'QNT-USD',\n  'Basic Attention Token': 'BAT-USD',\n  'PAX Gold': 'PAXG-USD',\n  Chiliz: 'CHZ-USD',\n  Zilliqa: 'ZIL-USD',\n  BitTorrent: 'BTT-USD',\n  Loopring: 'LRC-USD',\n  Dash: 'DASH-USD',\n  Stacks: 'STX-USD',\n  DeFiChain: 'DFI-USD',\n  PancakeSwap: 'CAKE-USD',\n  'Green Metaverse Token': 'GMT3-USD',\n  'Enjin Coin': 'ENJ-USD',\n  Kusama: 'KSM-USD',\n  'Tether Gold': 'XAUT-USD',\n  Fruits: 'FRTS-USD',\n  'Curve DAO Token': 'CRV-USD',\n  Gala: 'GALA-USD',\n  Celo: 'CELO-USD',\n  Amp: 'AMP-USD',\n  Holo: 'HOT1-USD',\n  Kava: 'KAVA-USD',\n  '1inch Network': '1INCH-USD',\n  Nexo: 'NEXO-USD',\n  NEM: 'XEM-USD',\n  Storj: 'STORJ-USD',\n  'XDC Network': 'XDC-USD',\n  Safe: 'SAFE1-USD',\n  Mina: 'MINA-USD',\n  WEMIX: 'WEMIX-USD',\n  Synthetix: 'SNX-USD',\n  Decred: 'DCR-USD',\n  'Counos X': 'CCXX-USD',\n  Arweave: 'AR-USD',\n  GateToken: 'GT-USD',\n  Kadena: 'KDA-USD',\n  Qtum: 'QTUM-USD',\n  Symbol: 'XYM-USD',\n  Gnosis: 'GNO-USD',\n  Compound: 'COMP1-USD',\n  Threshold: 'T-USD',\n  'Bitcoin Gold': 'BTG-USD',\n  Harmony: 'ONE1-USD',\n  'Convex Finance': 'CVX-USD',\n  BORA: 'BORA-USD',\n  'Theta Fuel': 'TFUEL-USD',\n  IOST: 'IOST-USD',\n  'OMG Network': 'OMG-USD',\n  IoTeX: 'IOTX-USD',\n  Audius: 'AUDIO-USD',\n  'Oasis Network': 'ROSE-USD',\n  ICON: 'ICX-USD',\n  BinaryX: 'BNX-USD',\n  'The Transfer Token': 'TTT1-USD',\n  BitDAO: 'BIT1-USD',\n  'Kyber Network Crystal v2': 'KNC-USD',\n  TitanSwap: 'TITAN-USD',\n  Ravencoin: 'RVN-USD',\n  Ankr: 'ANKR-USD',\n  Celsius: 'CEL-USD',\n  '0x': 'ZRX-USD',\n  'Trust Wallet Token': 'TWT-USD',\n  NXM: 'NXM-USD',\n  Osmosis: 'OSMO-USD',\n  Serum: 'SRM-USD',\n  Golem: 'GLM-USD',\n  Terra: 'LUNA2-USD',\n  'WOO Network': 'WOO-USD',\n  MXC: 'MXC-USD',\n  LINK: 'LN-USD',\n  Balancer: 'BAL-USD',\n  JUST: 'JST-USD',\n  Livepeer: 'LPT-USD',\n  Ontology: 'ONT-USD',\n  Swipe: 'SXP-USD',\n  'Siacoin\t': 'SC-USD',\n  'SKALE Network': 'SKL-USD',\n  WAX: 'WAXP-USD',\n  'yearn.finance': 'YFI-USD',\n  Moonbeam: 'GLMR-USD',\n  'Immutable X': 'IMX1-USD',\n  SwissBorg: 'CHSB-USD',\n  Horizen: 'ZEN-USD',\n  'Ethereum Name Service': 'ENS-USD',\n  Astar: 'ASTR-USD',\n  LooksRare: 'LOOKS-USD',\n  Hive: 'HIVE-USD',\n  Polymath: 'POLY-USD',\n};\n","export const indices = [\n  {\n    name: 'Dow Jones',\n    symbol: '^DJI',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'NASDAQ 100',\n    symbol: '^NDX',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'NASDAQ Composite',\n    symbol: '^IXIC',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'S&P 500',\n    symbol: '^GSPC',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'CBOE Volatility',\n    symbol: '^VIX',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'US Dollar',\n    symbol: 'DX-Y.NYB',\n    country: 'US',\n    region: 'North America',\n  },\n  {\n    name: 'AEX',\n    symbol: '^AEX',\n    country: 'NL',\n    region: 'Europe',\n  },\n  {\n    name: 'CAC 40',\n    symbol: '^FCH',\n    country: 'FR',\n    region: 'Europe',\n  },\n  {\n    name: 'DAX',\n    symbol: '^GDAXI',\n    country: 'DE',\n    region: 'Europe',\n  },\n  {\n    name: 'Euro Stoxx 50',\n    symbol: '^STOXX50E',\n    country: 'DE',\n    region: 'Europe',\n  },\n  {\n    name: 'FTSE 100',\n    symbol: '^FTSE',\n    country: 'GB',\n    region: 'Europe',\n  },\n  {\n    name: 'FTSE MIB INDEX',\n    symbol: 'FTSEMIB.MI',\n    country: 'IT',\n    region: 'Europe',\n  },\n  {\n    name: 'IBEX 35',\n    symbol: '^IBEX',\n    country: 'ES',\n    region: 'Europe',\n  },\n  {\n    name: 'MOEX Russia',\n    symbol: 'IMOEX.ME',\n    country: 'RU',\n    region: 'Europe',\n  },\n  {\n    name: 'RTSI',\n    symbol: 'RTSI.ME',\n    country: 'RU',\n    region: 'Europe',\n  },\n  {\n    name: 'FTSE China A50',\n    symbol: 'XIN9.FGI',\n    country: 'CN',\n    region: 'Asia',\n  },\n  {\n    name: 'Hang Seng',\n    symbol: '^HSI',\n    country: 'CN',\n    region: 'Asia',\n  },\n  {\n    name: 'Nikkei 225',\n    symbol: '^N225',\n    country: 'JP',\n    region: 'Asia',\n  },\n];\n","\nexport const currencies = {\n  \"EUR/USD\": \"EURUSD=X\",\n  \"USD/JPY\": \"JPY=X\",\n  \"GBP/USD\": \"GBPUSD=X\",\n  \"AUD/USD\": \"AUDUSD=X\",\n  \"NZD/USD\": \"NZDUSD=X\",\n  \"EUR/JPY\": \"EURJPY=X\",\n  \"GBP/JPY\": \"GBPJPY=X\",\n  \"EUR/GBP\": \"EURGBP=X\",\n  \"EUR/CAD\": \"EURCAD=X\",\n  \"EUR/SEK\": \"EURSEK=X\",\n  \"EUR/CHF\": \"EURCHF=X\",\n  \"EUR/HUF\": \"EURHUF=X\",\n  \"USD/CNY\": \"CNY=X\",\n  \"USD/HKD\": \"HKD=X\",\n  \"USD/SGD\": \"SGD=X\",\n  \"USD/INR\": \"INR=X\",\n  \"USD/MXN\": \"MXN=X\",\n  \"USD/PHP\": \"PHP=X\",\n  \"USD/IDR\": \"IDR=X\",\n  \"USD/THB\": \"THB=X\",\n  \"USD/MYR\": \"IDR=X\",\n  \"USD/ZAR\": \"ZAR=X\",\n  \"USD/RUB\": \"RUB=X\",\n}","import { TickerOptions, YahooInterface, TickerGroups } from './yahoo.interface';\nimport { FetchInterface } from '../../services/fetch/fetch.interface';\nimport { commodities } from './const/commodities';\nimport { cryptocurrencies } from './const/cryptocurrencies';\nimport { indices } from './const/indices';\nimport { currencies } from './const/currencies';\n\nexport class Yahoo implements YahooInterface {\n  constructor(private readonly fetcher: FetchInterface) {}\n\n  getTickerList(type?: TickerGroups) {\n    const mappedType = {\n      commodities,\n      cryptocurrencies,\n      indices,\n      currencies,\n    };\n    return type ? mappedType[type] : mappedType;\n  }\n\n  async getTicker(ticker: string, options: TickerOptions) {\n    const url = new URL(\n      `https://query1.finance.yahoo.com/v7/finance/download/${ticker}`\n    );\n    Object.entries(options).forEach(([key, value]) =>\n      url.searchParams.set(key, String(value))\n    );\n\n    const { data } = await this.fetcher<string>({\n      url: url.toString(),\n      method: 'GET',\n    });\n\n    return data;\n  }\n}\n","\nexport const regions = [\n  'HK',\n  'HU',\n  'MX',\n  'SG',\n  'JP',\n  'BR',\n  'IT',\n  'KR',\n  'TR',\n  'RO',\n  'CN',\n  'PL',\n  'PT',\n  'ID',\n  'SE',\n  'LU',\n  'FI',\n  'DE',\n  'AU',\n  'RU',\n  'IE',\n  'ZA',\n  'GB',\n  'IN',\n  'NL',\n  'CH',\n  'ES',\n  'CZ',\n  'FR',\n  'EA',\n  'NO',\n  'AT',\n  'CY',\n  'GR',\n  'DK',\n  'CA',\n  'US',\n  'NZ',\n  'BE'\n]","import { FetchInterface } from '../../services/fetch/fetch.interface';\nimport {\n  CalendarOptions,\n  CalendarResponse,\n  ForexClubInterface,\n} from './forexclub.interface';\nimport { regions } from './forexclub.constansts';\n\nexport class ForexClub implements ForexClubInterface {\n  constructor(private readonly fetcher: FetchInterface) {}\n\n  getRegions(): string[] {\n    return regions;\n  }\n\n  async getCalendar(options: CalendarOptions): Promise<CalendarResponse> {\n    const url = new URL('https://economcalendar.fxclub.org/api/events/');\n    Object.entries(options).forEach(([key, value]) =>\n      url.searchParams.set(key, value)\n    );\n\n    const { data } = await this.fetcher<CalendarResponse>({\n      url: url.toString(),\n      method: 'GET',\n    });\n\n    return data;\n  }\n}\n"],"names":["apiMapper","yahoo","axios","create","baseURL","Converter","data","this","_proto","toCSV","split","toJSON","Array","isArray","header","slice","reduce","acc","item","obj","includes","forEach","val","i","replace","save","commodities","energy","Crude Oil","Brent Crude Oil","Natural Gas","Heating Oil","metals","Gold","Silver","Copper","Platinum","agriculture","Coffee","Corn","Wheat","Sugar","Cotton","Cocoa","cryptocurrencies","Bitcoin","Ethereum","Binance Coin","XRP","Cardano","Solana","Dogecoin","Polkadot","HEX","TRON","SHIBA INU","UNUS SED LEO","Avalanche","Polygon","yOUcash","Uniswap","Litecoin","Lido stETH","FTX Token","Chainlink","Stellar","Crypto.com Coin","NEAR Protocol\t","Algorand","Cosmos","Monero","Bitcoin Cash","Ethereum Classic","Chain","VeChain","Flow","Decentraland","Hedera","Internet Computer","THETA","Elrond","Frax","Axie Infinity","Toncoin","The Sandbox","ApeCoin","Tezos","Filecoin\t","Helium\t","Bitcoin SV","KuCoin Token","EOS-USD","Zcash","Maker","Aave","IOTA","Huobi Token","eCash","Neutrino","The Graph","OKB","Liquity","THORChain","Klaytn","Fantom","Waves","Neo","Quant","Basic Attention Token","PAX Gold","Chiliz","Zilliqa","BitTorrent","Loopring","Dash","Stacks","DeFiChain","PancakeSwap","Green Metaverse Token","Enjin Coin","Kusama","Tether Gold","Fruits","Curve DAO Token","Gala","Celo","Amp","Holo","Kava","1inch Network","Nexo","NEM","Storj","XDC Network","Safe","Mina","WEMIX","Synthetix","Decred","Counos X","Arweave","GateToken","Kadena","Qtum","Symbol","Gnosis","Compound","Threshold","Bitcoin Gold","Harmony","Convex Finance","BORA","Theta Fuel","IOST","OMG Network","IoTeX","Audius","Oasis Network","ICON","BinaryX","The Transfer Token","BitDAO","Kyber Network Crystal v2","TitanSwap","Ravencoin","Ankr","Celsius","0x","Trust Wallet Token","NXM","Osmosis","Serum","Golem","Terra","WOO Network","MXC","LINK","Balancer","JUST","Livepeer","Ontology","Swipe","Siacoin\t","SKALE Network","WAX","yearn.finance","Moonbeam","Immutable X","SwissBorg","Horizen","Ethereum Name Service","Astar","LooksRare","Hive","Polymath","indices","name","symbol","country","region","currencies","EUR/USD","USD/JPY","GBP/USD","AUD/USD","NZD/USD","EUR/JPY","GBP/JPY","EUR/GBP","EUR/CAD","EUR/SEK","EUR/CHF","EUR/HUF","USD/CNY","USD/HKD","USD/SGD","USD/INR","USD/MXN","USD/PHP","USD/IDR","USD/THB","USD/MYR","USD/ZAR","USD/RUB","Yahoo","fetcher","getTickerList","type","mappedType","getTicker","ticker","options","url","URL","Object","entries","searchParams","set","String","_context","toString","method","regions","ForexClub","getRegions","getCalendar","api","headers","params","config"],"mappings":"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"}